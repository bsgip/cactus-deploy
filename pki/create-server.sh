#!/bin/bash

CHAIN_ID="$1"
DNS="$2"
MICA_KEY_FILE="mica-$CHAIN_ID.key.pem"
MICA_CERT_FILE="mica-$CHAIN_ID.cert.pem"

if [[ -z "${CHAIN_ID}" ]] || [[ -z "${DNS}" ]]; then
  echo "usage: create-server [CHAIN_ID] [DNS] "
  echo "CHAIN_ID=The MCA/MICA CHAIN ID that was used"
  echo "DNS=A DNS name for the server"
  exit 1
fi

if [ ! -f $MICA_KEY_FILE ] || [ ! -f $MICA_CERT_FILE ]; then
  echo "Couldn't find $MICA_KEY_FILE or $MICA_CERT_FILE - has create-mca-mica.sh been run in this directory?"
  exit 1
fi


SERVER_KEY_FILE="$DNS.key.pem"
SERVER_KEY_PUB_FILE="$DNS.key.pub.pem"
SERVER_CERT_FILE="$DNS.cert.pem"
SERVER_CSR_FILE="$DNS.cert.pem"
SERVER_EXT_CONFIG_FILE="$DNS-openssl-ext.cnf"


oid_2030_5="1.3.6.1.4.1.40732"         # OID base for IEEE 2030 (section 6.11.7.1 in IEEE2030.5 2018)
oid_dev="$oid_2030_5.1"                # OID for "device types" (section 6.11.7.2 in IEEE2030.5 2018)
oid_dev_generic="$oid_dev.1"           # Used for most devices
oid_dev_mobile="$oid_dev.2"            # Used in addition to "generic device type" to identify "mobile" IEEE 2030.5 entities
oid_dev_post_manufacture="$oid_dev.3"  # Used in device certs issued post-manufacture
 
oid_policy="$oid_2030_5.2"                    # OID for 2030.5 Policy Assignments (section 6.11.7.3 in IEEE2030.5 2018)
oid_2030_5_policy_test="$oid_policy.1"        # MUST be included in test certificates
oid_2030_5_policy_selfsign="$oid_policy.2"    # MUST be included in IEEE 2030.5 self-signed certificates
oid_2030_5_policy_commercial="$oid_policy.3"  # MUST be included in commercial certificates
oid_2030_5_policy_bulk="$oid_policy.4"        # MUST be included in bulk-issued certificates (Priv. Key generated by CA, not by device)


# Generate keys
openssl ecparam -name prime256v1 -genkey -noout -out $SERVER_KEY_FILE
# chmod 400 $SERVER_KEY_FILE

cat > $SERVER_EXT_CONFIG_FILE <<EOL
[ req ]
distinguished_name = empty_distinguished_name
req_extensions = server
prompt = no

[ server ]
keyUsage               = critical, keyAgreement, digitalSignature
certificatePolicies    = $oid_dev_generic
subjectAltName         = critical,@alt_names

[ empty_distinguished_name ]

[ HardwareModuleName ]
hwType=OID:$oid_dev_generic
hwSerialNum=OCT:cactus-server-cert
 
[ alt_names ]
otherName.1 = 1.3.6.1.5.5.7.8.4;SEQ:HardwareModuleName
DNS.1 = $DNS
EOL


# Generate CSR and sign cert
echo "Generating Server Cert"
days_until_9999=$(echo $(( ( $(date -d '9999-12-31' +%s) - $(date +%s) ) / 86400 )))
openssl req -new -key "$SERVER_KEY_FILE" -out "$SERVER_CSR_FILE" -batch -config "$SERVER_EXT_CONFIG_FILE" -subj "/"
openssl x509 -req -in "$SERVER_CSR_FILE" -CA "$MICA_CERT_FILE" -CAkey "$MICA_KEY_FILE" -set_serial 1000 -out "$SERVER_CERT_FILE" -days $days_until_9999 -extfile "$SERVER_EXT_CONFIG_FILE" -extensions server -sha256

